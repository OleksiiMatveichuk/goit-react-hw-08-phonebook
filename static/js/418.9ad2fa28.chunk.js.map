{"version":3,"file":"static/js/418.9ad2fa28.chunk.js","mappings":"6PAqFA,UA9Ec,WACZ,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,QACHP,EAASO,GAKd,EAEKC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBADiB,SAGXC,EAAO,CAAEd,KAAAA,EAAME,MAAAA,GAHJ,SAIXE,GAASW,EAAAA,EAAAA,GAAMD,IAAOE,SAJX,OAKjBV,EAAS,YAAa,CAAEW,SAAS,IACjChB,EAAQ,IACRE,EAAS,IAPQ,4GAAH,sDAWlB,OACE,iCACE,uBAAG,WACH,kBAAMe,SAAUP,EAAhB,WACE,UAAC,IAAD,CAAYQ,UAAU,OAAtB,WACE,SAAC,SAAD,CAAiBC,GAAG,4BAApB,SAAgD,UAChD,SAAC,YAAD,CACE,aAAW,UACX,mBAAiB,4BACjBC,KAAK,OACLrB,KAAK,OACLU,MAAOV,EAEPsB,MAAM,yIACNC,UAAQ,EACRC,SAAUhB,QAGd,UAAC,IAAD,CAAYW,UAAU,OAAtB,WACE,SAAC,SAAD,CAAiBC,GAAG,4BAApB,SAAgD,WAGhD,SAAC,YAAD,CACE,aAAW,UACX,mBAAiB,4BACjBC,KAAK,QACLrB,KAAK,QACLU,MAAOR,EAEPoB,MAAM,+FACNC,UAAQ,EACRC,SAAUhB,QAGd,mBACEiB,MAAO,CACLC,SAAU,QACVC,aAAc,MACdC,eAAgB,WAJpB,SAMC,eAMR,C","sources":["pages/LogIn.jsx"],"sourcesContent":["import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'service/phoneboockAPI';\nimport { useNavigate } from 'react-router-dom';\n\nconst LogIn = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const user = { name, email };\n      await dispatch(logIn(user)).unwrap();\n      navigate('/contacts', { replace: true });\n      setName('');\n      setEmail('');\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <p>LogIn</p>\n      <form onSubmit={handleSubmit}>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"inputGroup-sizing-default\">Name</InputGroup.Text>\n          <Form.Control\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            // pattern=\"^[a-zA-Z]+(?:\\s+[a-zA-Z]+)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"inputGroup-sizing-default\">\n            Email\n          </InputGroup.Text>\n          <Form.Control\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            // pattern=\"^\\+[1-9]{1}[0-9]{3,14}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <button\n          style={{\n            minWidth: '100px',\n            borderRadius: '8px',\n            backgroundClip: '#6c757d',\n          }}\n        >\n          LogIn\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default LogIn;\n"],"names":["useState","name","setName","email","setEmail","dispatch","useDispatch","navigate","useNavigate","handleChange","target","value","handleSubmit","e","preventDefault","user","logIn","unwrap","replace","onSubmit","className","id","type","title","required","onChange","style","minWidth","borderRadius","backgroundClip"],"sourceRoot":""}